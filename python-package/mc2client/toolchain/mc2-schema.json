{
	"$schema": "http://json-schema.org/draft-07/schema#",
	"$id": "http://github.com/mc2-project/mc2-scripts/mc2-schema.json",
	"title": "MC2 cluster management scripts",
	"description": "MC2 cluster management schema",
	"type": "object",
	"definitions": {
        "commands": {
            "type": "array",
            "items": {
                "type": "string",
                "description": "shell command"
            }
        }
    },
    "required": [
        "cluster_name",
        "provider"
    ],
    "additionalProperties": false,
	"properties": {
        "cluster_name": {
            "description": "An unique identifier for the head node and workers of this cluster.",
            "type": "string"
        },
        "num_workers": {
            "description": "The total number of workers nodes to launch in addition to the head node. This number should be >= 0",
            "type": "integer",
            "minimum": 0
        },
        "provider": {
            "type": "object",
            "description": "Cloud-provider specific configuration.",
            "required": [ "type" ],
            "additionalProperties": true,
            "properties": {
                "type": {
                    "type": "string",
                    "description": "e.g. aws, azure, gcp,..."
                },
                "region": { 
                    "type": "string",
                    "description": "e.g. us-east-1"
                },
                "module": {
                    "type": "string",
                    "description": "module, if using external node provider"
                },
                "head_ip": {
                    "type": "string",
                    "description": "gcp project id, if using gcp"
                },
                "worker_ips": {
                    "type": "array",
                    "description": "local cluster head node"
                },
                "use_internal_ips": {
                    "type": "boolean",
                    "description": "don't require public ips"
                },
                "namespace": {
                    "type": "string",
                    "description": "k8s namespace, if using k8s"
                },
                "location": {
                    "type": "string",
                    "description": "Azure location"
                },
                "resource_group": {
                    "type": "string",
                    "description": "Azure resource group"
                },
                "tags": {
                    "type": "object",
                    "description": "Azure user-defined tags"
                },
                "subscription_id": {
                    "type": "string",
                    "description": "Azure subscription id"
                },
                "msi_identity_id": {
                    "type": "string",
                    "description": "User-defined managed identity (generated by config)"
                },
                "msi_identity_principal_id": {
                    "type": "string",
                    "description": "User-defined managed identity principal id (generated by config)"
                },
                "subnet_id": {
                    "type": "string",
                    "description": "Network subnet id"
                },
                "autoscaler_service_account": {
                    "type": "object",
                    "description": "k8s autoscaler permissions, if using k8s"
                },
                "autoscaler_role": {
                    "type": "object",
                    "description": "k8s autoscaler permissions, if using k8s"
                },
                "autoscaler_role_binding": {
                    "type": "object",
                    "description": "k8s autoscaler permissions, if using k8s"
                },
                "cache_stopped_nodes": {
                    "type": "boolean",
                    "description": " Whether to try to reuse previously stopped nodes instead of launching nodes. This will also cause the autoscaler to stop nodes instead of terminating them. Only implemented for AWS."
                },
                "availability_zone": {
                    "type": "string",
                    "description": "GCP availability zone"
                },
                "project_id": {
                    "type": ["string", "null"],
                    "description": "GCP globally unique project id"
                },
                "gcp_credentials": {
                    "type": "string",
                    "description": "JSON string constituting GCP credentials"
                }
            }
        },
        "auth": {
            "type": "object",
            "description": "How MC2 will authenticate with newly launched nodes.",
            "additionalProperties": false,
            "properties": {
                "ssh_user": {
                    "type": "string",
                    "default": "ubuntu"
                },
                "ssh_public_key": { 
                    "type": "string"
                },
                "ssh_private_key": { 
                    "type": "string"
                }
            }
        },
        "head_node": {
            "type": "object",
            "description": "Provider-specific config for the head node, e.g. instance type."
        },
        "worker_nodes": {
            "type": "object",
            "description": "Provider-specific config for worker nodes. e.g. instance type."
        },
        "file_mounts": {
            "type": "object",
            "description": "Map of remote paths to local paths, e.g. {\"/tmp/data\": \"/my/local/data\"}"
        },
        "initialization_commands": {
            "$ref": "#/definitions/commands",
            "description": "List of commands that will be run before `setup_commands`. If docker is enabled, these commands will run outside the container and before docker is setup."
        },
        "setup_commands": {
            "$ref": "#/definitions/commands",
            "description": "List of common shell commands to run to setup nodes."
        },
        "head_setup_commands": {
            "$ref": "#/definitions/commands",
            "description": "Commands that will be run on the head node after common setup."
        },
        "worker_setup_commands": {
            "$ref": "#/definitions/commands",
            "description": "Commands that will be run on worker nodes after common setup."
        },
        "head_start_mc2_commands": {
            "$ref": "#/definitions/commands",
            "description": "Command to start MC2 on the head node. You shouldn't need to modify this."
        },
        "worker_start_mc2_commands": {
            "$ref": "#/definitions/commands",
            "description": "Command to start MC2 on worker nodes. You shouldn't need to modify this."
        },
        "available_instance_types": {
            "type": "object",
            "description": "A list of instance types available for launching with 'auto' worker type.",
            "patternProperties": {
                ".*": {
                    "type": "object",
                    "properties": {
                       "max_workers": {"type": "integer"},
                       "resources": {
                           "type": "object",
                           ".*": {"type": "number"}
                       }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        }
    }
}
